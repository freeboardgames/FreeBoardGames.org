#!/bin/bash

set -e
set -o pipefail

cd "$(dirname "$0")"
cd ..
kubectl config use-context minikube
helm uninstall --wait fbg 2> /dev/null || true
rm -f misc/e2e/out/*
minikube addons enable ingress
./docker-build.sh -m
helm install --wait fbg ./helm

for i in {1..300}; do
  INGRESS_IP=$(kubectl get ingress ingress -o json | jq -r '.status.loadBalancer.ingress[0].ip')
  [[ ${#INGRESS_IP} -ge 5 ]] && break
  echo "Waiting for ingress ip..."
  sleep 2
done

if grep my-fbg.info /etc/hosts > /dev/null 2>&1; then
  echo "my-fbg.info already on /etc/hosts"
else
  echo "Adding $INGRESS_IP to /etc/hosts"
  sudo sh -c "echo \"$INGRESS_IP my-fbg.info\" >> /etc/hosts"
fi

for i in {1..300}; do
  FBG_SERVER_IP=$(kubectl get service fbg-fbg-server -o json | jq -r ".spec.clusterIP")
  [[ $(minikube ssh "curl $FBG_SERVER_IP/healthz" 2> /dev/null) == "OK" ]] > /dev/null 2>&1 && break
  echo "Waiting for fbg-server pods to stabilize..."
  sleep 2
done

for i in {1..300}; do
  BGIO_SERVICE=$(kubectl get service fbg-bgio -o json) || true
  BGIO_IP=$(echo $BGIO_SERVICE | jq -r ".spec.clusterIP") || true
  CURL_GAMES=$(minikube ssh "curl $BGIO_IP/games" 2> /dev/null) || true
  echo $CURL_GAMES | jq > /dev/null 2>&1 && break
  echo "Waiting for bgio pods to stabilize..."
  sleep 2
done

for i in {1...300}; do
  HTTP_STATUS=$(curl --insecure -s -w "%{http_code}" https://my-fbf.info/en) || true
  curl --insecure https://my-fbg.info/en || true
  kubectl get ingress -o json || true
  kubectl get ingress || true
  echo $HTTP_STATUS
  sleep 2
  [[ $HTTP_STATUS -eq 200 ]] && break
done

cd misc/e2e
yarn run test https://my-fbg.info
